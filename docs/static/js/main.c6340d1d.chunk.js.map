{"version":3,"sources":["GlobalHeader.js","Events.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItem","props","className","name","GlobalHeader","SingleEvent","eventInfo","src","banner","title","startdate","enddate","shortdescription","location","Events","state","events","status","fetch","then","res","json","data","setState","this","map","e","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAEA,SAASA,EAASC,GACd,OACI,qBAAKC,UAAU,oBAAf,SACKD,EAAME,OAgCJC,MA3Bf,WACI,OACI,gCACI,wBAAQF,UAAU,eAAlB,SACI,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,uBAGA,cAACF,EAAD,CAAUG,KAAK,WACf,cAACH,EAAD,CAAUG,KAAK,WACf,cAACH,EAAD,CAAUG,KAAK,SACf,qBAAKD,UAAU,QACf,qBAAKA,UAAU,oBAAf,4BAQZ,qBAAKA,UAAU,qB,kCC5B3B,SAASG,EAAYJ,GACjB,IAAIK,EAAYL,EAAMK,UAEtB,OACI,sBAAKJ,UAAU,kBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,YAAYK,IAAK,oCAAsCD,EAAUE,WAEpF,qBAAKN,UAAU,gBAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,iBAAf,SAAiCI,EAAUG,QAC3C,sBAAKP,UAAU,WAAf,UAA2BI,EAAUI,UAArC,MAAmDJ,EAAUK,WAC7D,8BAAML,EAAUM,wBAGxB,qBAAKV,UAAU,oBAAf,SACKI,EAAUO,c,IA+CZC,E,kDAxCX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IACDc,MAAQ,CACTC,OAAQ,GACRC,OAAQ,WAJG,E,qDAQnB,WAAqB,IAAD,OAChBC,MAAM,gDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACH,EAAKC,SAAS,CACVP,OAAQM,EAAKA,KACbL,OAAQ,c,oBAKpB,WACI,MAAyB,WAArBO,KAAKT,MAAME,OAEP,8CAQJ,qBAAKf,UAAU,mBAAf,SAEIsB,KAAKT,MAAMC,OAAOS,KAAI,SAAAC,GAAC,OAAI,cAACrB,EAAD,CAAaC,UAAWoB,a,GAjC9CC,IAAMC,WCXZC,MAVf,WACE,OACE,sBAAK3B,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,cAAC,EAAD,QCGS4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c6340d1d.chunk.js","sourcesContent":["import './GlobalHeader.css';\r\n\r\nfunction MenuItem(props) {\r\n    return (\r\n        <div className=\"menuItem col-auto\">\r\n            {props.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction GlobalHeader() {\r\n    return (\r\n        <div>\r\n            <header className=\"globalheader\">\r\n                <div className=\"globalheaderContent\">\r\n                    <div className=\"row\">\r\n                        <div className=\"menuItem col-auto\">\r\n                            Animse.se\r\n                        </div>\r\n                        <MenuItem name=\"Events\" />\r\n                        <MenuItem name=\"Awoooo\" />\r\n                        <MenuItem name=\"okay\"/>\r\n                        <div className=\"col\"/>\r\n                        <div className=\"menuItem col-auto\">\r\n                            Logga I\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </header>\r\n            <div className=\"headerSpacer\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GlobalHeader;","import React from 'react';\r\nimport './Events.css';\r\n\r\nfunction SingleEvent(props) {\r\n    var eventInfo = props.eventInfo\r\n\r\n    return (\r\n        <div className=\"SingleEvent row\">\r\n            <div className=\"Countdown col-md-3\">\r\n                <img className=\"img-fluid\" src={\"http://api.animse.se:8055/assets/\" + eventInfo.banner}/>\r\n            </div>\r\n            <div className=\"Info col-md-7\">\r\n                <div className=\"row\">\r\n                    <div className=\"Title col-auto\">{eventInfo.title}</div>\r\n                    <div className=\"Date col\">{eventInfo.startdate} - {eventInfo.enddate}</div>\r\n                    <div>{eventInfo.shortdescription}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"Location col-md-2\">\r\n                {eventInfo.location}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Events extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            events: [],\r\n            status: 'loading'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://api.animse.se:8055/items/animeevents/\")\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                events: data.data,\r\n                status: 'idle'\r\n            })\r\n        })        \r\n    }\r\n\r\n    render() {\r\n        if (this.state.status == 'loading') {\r\n            return (\r\n                <div>\r\n                    loading....\r\n                </div>\r\n            )\r\n        }\r\n\r\n    \r\n        return (\r\n            <div className=\"Events container\"> \r\n            {\r\n                this.state.events.map(e => <SingleEvent eventInfo={e} />)\r\n            }            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Events;","import './App.css';\nimport GlobalHeader from './GlobalHeader';\nimport Events from './Events'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <GlobalHeader/>\n      <Events/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}